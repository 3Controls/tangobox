/*----- PROTECTED REGION ID(LinacGunStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        LinacGunStateMachine.cpp
//
// description : State machine file for the LinacGun class
//
// project :     Linac Gun
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <LinacGun.h>

/*----- PROTECTED REGION END -----*/	//	LinacGun::LinacGunStateMachine.cpp

//================================================================
//  States   |  Description
//================================================================
//  ON       |  *
//  OFF      |  *
//  DISABLE  |  *
//  FAULT    |  *
//  ALARM    |  ALARM: short pulse mode and 352 Mhz On.


namespace LinacGun_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_PulseV_allowed()
 *	Description : Execution allowed for PulseV attribute
 */
//--------------------------------------------------------
bool LinacGun::is_PulseV_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for PulseV attribute in Write access.
	/*----- PROTECTED REGION ID(LinacGun::PulseVStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::PulseVStateAllowed_WRITE

	//	Not any excluded states for PulseV attribute in read access.
	/*----- PROTECTED REGION ID(LinacGun::PulseVStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::PulseVStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_PulseL_allowed()
 *	Description : Execution allowed for PulseL attribute
 */
//--------------------------------------------------------
bool LinacGun::is_PulseL_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for PulseL attribute in Write access.
	/*----- PROTECTED REGION ID(LinacGun::PulseLStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::PulseLStateAllowed_WRITE

	//	Not any excluded states for PulseL attribute in read access.
	/*----- PROTECTED REGION ID(LinacGun::PulseLStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::PulseLStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_GridV_allowed()
 *	Description : Execution allowed for GridV attribute
 */
//--------------------------------------------------------
bool LinacGun::is_GridV_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for GridV attribute in Write access.
	/*----- PROTECTED REGION ID(LinacGun::GridVStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::GridVStateAllowed_WRITE

	//	Not any excluded states for GridV attribute in read access.
	/*----- PROTECTED REGION ID(LinacGun::GridVStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::GridVStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_PulseType_allowed()
 *	Description : Execution allowed for PulseType attribute
 */
//--------------------------------------------------------
bool LinacGun::is_PulseType_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for PulseType attribute in Write access.
	/*----- PROTECTED REGION ID(LinacGun::PulseTypeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::PulseTypeStateAllowed_WRITE

	//	Not any excluded states for PulseType attribute in read access.
	/*----- PROTECTED REGION ID(LinacGun::PulseTypeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::PulseTypeStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_Delay_allowed()
 *	Description : Execution allowed for Delay attribute
 */
//--------------------------------------------------------
bool LinacGun::is_Delay_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Delay attribute in Write access.
	/*----- PROTECTED REGION ID(LinacGun::DelayStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::DelayStateAllowed_WRITE

	//	Not any excluded states for Delay attribute in read access.
	/*----- PROTECTED REGION ID(LinacGun::DelayStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::DelayStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_DeflectionDC_allowed()
 *	Description : Execution allowed for DeflectionDC attribute
 */
//--------------------------------------------------------
bool LinacGun::is_DeflectionDC_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for DeflectionDC attribute in Write access.
	/*----- PROTECTED REGION ID(LinacGun::DeflectionDCStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::DeflectionDCStateAllowed_WRITE

	//	Not any excluded states for DeflectionDC attribute in read access.
	/*----- PROTECTED REGION ID(LinacGun::DeflectionDCStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::DeflectionDCStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_Cleaning_allowed()
 *	Description : Execution allowed for Cleaning attribute
 */
//--------------------------------------------------------
bool LinacGun::is_Cleaning_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Cleaning attribute in Write access.
	/*----- PROTECTED REGION ID(LinacGun::CleaningStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::CleaningStateAllowed_WRITE

	//	Not any excluded states for Cleaning attribute in read access.
	/*----- PROTECTED REGION ID(LinacGun::CleaningStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::CleaningStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_On_allowed()
 *	Description : Execution allowed for On attribute
 */
//--------------------------------------------------------
bool LinacGun::is_On_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Compare device state with not allowed states.
	if (get_state()==Tango::DISABLE ||
		get_state()==Tango::ALARM)
	{
	/*----- PROTECTED REGION ID(LinacGun::OnStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::OnStateAllowed
		return false;
	}
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_Off_allowed()
 *	Description : Execution allowed for Off attribute
 */
//--------------------------------------------------------
bool LinacGun::is_Off_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Off command.
	/*----- PROTECTED REGION ID(LinacGun::OffStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::OffStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGun::is_Reset_allowed()
 *	Description : Execution allowed for Reset attribute
 */
//--------------------------------------------------------
bool LinacGun::is_Reset_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Reset command.
	/*----- PROTECTED REGION ID(LinacGun::ResetStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGun::ResetStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(LinacGun::LinacGunStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	LinacGun::LinacGunStateAllowed.AdditionalMethods

}	//	End of namespace

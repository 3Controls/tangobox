/*----- PROTECTED REGION ID(LinacSequencer::ClassFactory.cpp) ENABLED START -----*/
static const char *RcsId = "$Header: /segfs/tango/cvsroot/cppserver/machine/linac/LinacSequencer/ClassFactory.cpp,v 1.23 2010/06/17 11:31:03 vedder Exp $";
//+=============================================================================
//
// file :        ClassFactory.cpp
//
// description : C++ source for the class_factory method of the DServer
//               device class. This method is responsible to create
//               all class singletin for a device server. It is called
//               at device server startup
//
// project :     TANGO Device Server
//
// $Author: vedder $
//
// $Revision: 1.23 $
//
// $Log: ClassFactory.cpp,v $
// Revision 1.23  2010/06/17 11:31:03  vedder
// This version does not handle elin/focus/spare device anymore. The spare was a source of passing FAULT in the synoptic. This version also correct the end sequence message who was erroneously commented out.
//
// Revision 1.1.1.1  2005/08/18 14:26:53  bourtemb
// Imported using TkCVS
//
//
// copyleft :    European Synchrotron Radiation Facility
//               BP 220, Grenoble 38043
//               FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================


#include <tango.h>
#include <LinacSequencerClass.h>

/**
 *	Create LinacSequencerClass singleton and store it in DServer object.
 */

void Tango::DServer::class_factory()
{

	add_class(LinacSequencer_ns::LinacSequencerClass::init("LinacSequencer"));

}
/*----- PROTECTED REGION END -----*/	//	LinacSequencer::ClassFactory.cpp

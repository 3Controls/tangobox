#=============================================================================
#
# file :        Makefile
#
# description : Makefile to generate a TANGO device server.
#
# project :     LinacMediumLevel
#
# $Author:  $
#
# $Revision:  $
# $Date:  $
#
#=============================================================================
#                This file is generated by POGO
#        (Program Obviously used to Generate tango Object)
#=============================================================================
#
#
#MAKE_ENV = //usr/local/bin/env
MAKE_ENV = /usr/local/share/pogo/preferences


#=============================================================================
# PACKAGE_NAME is the name of the library/device/exe you want to build
#
PACKAGE_NAME = LinacMediumLevel
MAJOR_VERS   = 1
MINOR_VERS   = 0
RELEASE      = Release_$(MAJOR_VERS)_$(MINOR_VERS)


TACO_LIBS_DIR=/segfs/taco/release/$(BIN_DIR)/lib
TACO_INCLUDE_DIR=/segfs/taco/release/$(BIN_DIR)/include

# #=============================================================================
# # RELEASE_TYPE
# # - DEBUG     : debug symbols - no optimization
# # - OPTIMIZED : no debug symbols - optimization level set to O2
# #-----------------------------------------------------------------------------
RELEASE_TYPE = DEBUG

#=============================================================================
# OUTPUT_TYPE can be one of the following :
#   - 'STATIC_LIB' for a static library (.a)
#   - 'SHARED_LIB' for a dynamic library (.so)
#   - 'DEVICE' for a device server (will automatically include and link
#            with Tango dependencies)
#   - 'SIMPLE_EXE' for an executable with no dependency (for exemple the test tool
#                of a library with no Tango dependencies)
#
OUTPUT_TYPE = DEVICE

#=============================================================================
# OUTPUT_DIR  is the directory which contains the build result.
# if not set, the standard location is :
#	- $HOME/DeviceServers if OUTPUT_TYPE is DEVICE
#	- ../bin for others
#
OUTPUT_DIR = ./bin/$(BIN_DIR)

#=============================================================================
# Tango Class list used by project
#
LINACRF_CLASS = LinacRF
LINACRF_HOME  = /home/tango-cs/dservers/linac/LinacRF

LINACMODULATOR_CLASS = LinacModulator
LINACMODULATOR_HOME  = /home/tango-cs/dservers/linac/LinacModulator

LINACMODAUX_CLASS = LinacModAux
LINACMODAUX_HOME  = /home/tango-cs/dservers/linac/LinacModAux

LINACHVPS_CLASS = LinacHVPS
LINACHVPS_HOME  = /home/tango-cs/dservers/linac/LinacHVPS

LINACGUNAUX_CLASS = LinacGunAux
LINACGUNAUX_HOME  = /home/tango-cs/dservers/linac/LinacGunAux

LINACGUN_CLASS = LinacGun
LINACGUN_HOME  = /home/tango-cs/dservers/linac/LinacGun

LINACCOOLING_CLASS = LinacCooling
LINACCOOLING_HOME  = /home/tango-cs/dservers/linac/LinacCooling


#=============================================================================
# INC_DIR_USER is the list of all include path needed by your sources
#   - for a device server, tango dependencies are automatically appended
#   - '-I ../include' and '-I .' are automatically appended in all cases
#
INC_DIR_USER= -I . \
              -I $(TACO_INCLUDE_DIR)\
              -I $(LINACRF_HOME)\
              -I $(LINACMODULATOR_HOME)\
              -I $(LINACMODAUX_HOME)\
              -I $(LINACHVPS_HOME)\
              -I $(LINACGUNAUX_HOME)\
              -I $(LINACGUN_HOME)\
              -I $(LINACCOOLING_HOME)

#=============================================================================
# LIB_DIR_USER is the list of user library directories
#   - for a device server, tango libraries directories are automatically appended
#   - '-L ../lib' is automatically appended in all cases
#
LIB_DIR_USER= -L $(TACO_LIBS_DIR)

#=============================================================================
# LFLAGS_USR is the list of user link flags
#   - for a device server, tango libraries directories are automatically appended
#   - '-ldl -lpthread' is automatically appended in all cases
#
# !!! ATTENTION !!!
# Be aware that the order matters. 
# For example if you must link with libA, and if libA depends itself on libB
# you must use '-lA -lB' in this order as link flags, otherwise you will get
# 'undefined reference' errors
#
#LFLAGS_USR+=


#=============================================================================
# CXXFLAGS_USR lists the compilation flags specific for your library/device/exe
# This is the place where to put your compile-time macros using '-Dmy_macro'
#
# -DACE_HAS_EXCEPTIONS -D__ACE_INLINE__ for ACE
#
ifdef SIMU
CXXFLAGS_USR+= -DSIMU
endif

CXXFLAGS_USR+= -DBUILD_HOST=\"`hostname`\"


#=============================================================================
# TANGO_REQUIRED 
# - TRUE  : your project depends on TANGO
# - FALSE : your project does not depend on TANGO
#-----------------------------------------------------------------------------
# - NOTE : if PROJECT_TYPE is set to DEVICE, TANGO will be auto. added
#-----------------------------------------------------------------------------  
TANGO_REQUIRED = TRUE



#=============================================================================
#	include Standard TANGO compilation options
#
include $(MAKE_ENV)/tango.opt

#=============================================================================
#	POST_PROCESSING: action to be done after normal make.
#	e.g.:  change executable file name, .....
#POST_PROCESSING = \
#	mv bin/$(BIN_DIR)/$(PACKAGE_NAME) bin/$(BIN_DIR)/$(PACKAGE_NAME)_DS

#=============================================================================
# SVC_OBJS is the list of all objects needed to make the output
#
SVC_OBJS =  $(SVC_LINACRF_OBJS) \
            $(SVC_LINACMODULATOR_OBJS) \
            $(SVC_LINACMODAUX_OBJS) \
            $(SVC_LINACHVPS_OBJS) \
            $(SVC_LINACGUNAUX_OBJS) \
            $(SVC_LINACGUN_OBJS) \
            $(SVC_LINACCOOLING_OBJS) \
            $(OBJDIR)/MultiClassesFactory.o \
            $(OBJDIR)/main.o

#------------  Object files for LinacRF class  ------------
SVC_LINACRF_OBJS = \
		$(OBJDIR)/LinacRF.o \
		$(OBJDIR)/LinacRFClass.o \
		$(OBJDIR)/LinacRFStateMachine.o

#------------  Object files for LinacModulator class  ------------
SVC_LINACMODULATOR_OBJS = \
		$(OBJDIR)/LinacModulator.o \
		$(OBJDIR)/LinacModulatorClass.o \
		$(OBJDIR)/LinacModulatorStateMachine.o

#------------  Object files for LinacModAux class  ------------
SVC_LINACMODAUX_OBJS = \
		$(OBJDIR)/LinacModAux.o \
		$(OBJDIR)/LinacModAuxClass.o \
		$(OBJDIR)/LinacModAuxStateMachine.o

#------------  Object files for LinacHVPS class  ------------
SVC_LINACHVPS_OBJS = \
		$(OBJDIR)/LinacHVPS.o \
		$(OBJDIR)/LinacHVPSClass.o \
		$(OBJDIR)/LinacHVPSStateMachine.o

#------------  Object files for LinacGunAux class  ------------
SVC_LINACGUNAUX_OBJS = \
		$(OBJDIR)/LinacGunAux.o \
		$(OBJDIR)/LinacGunAuxClass.o \
		$(OBJDIR)/LinacGunAuxStateMachine.o

#------------  Object files for LinacGun class  ------------
SVC_LINACGUN_OBJS = \
		$(OBJDIR)/LinacGun.o \
		$(OBJDIR)/LinacGunClass.o \
		$(OBJDIR)/LinacGunStateMachine.o

#------------  Object files for LinacCooling class  ------------
SVC_LINACCOOLING_OBJS = \
		$(OBJDIR)/LinacCooling.o \
		$(OBJDIR)/LinacCoolingClass.o \
		$(OBJDIR)/LinacCoolingStateMachine.o


#=============================================================================
#	include common targets
#
include $(MAKE_ENV)/common_target.opt


#=============================================================================
# Following are dependancies of the classes used by project
#
#------------  Object files dependancies for LinacRF class  ------------
LINACRF_INCLUDES = \
		$(LINACRF_HOME)/LinacRF.h \
		$(LINACRF_HOME)/LinacRFClass.h

$(OBJDIR)/LinacRF.o:  $(LINACRF_HOME)/LinacRF.cpp $(LINACRF_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacRF.o
$(OBJDIR)/LinacRFClass.o:  $(LINACRF_HOME)/LinacRFClass.cpp $(LINACRF_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacRFClass.o
$(OBJDIR)/LinacRFStateMachine.o:  $(LINACRF_HOME)/LinacRFStateMachine.cpp $(LINACRF_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacRFStateMachine.o

#------------  Object files dependancies for LinacModulator class  ------------
LINACMODULATOR_INCLUDES = \
		$(LINACMODULATOR_HOME)/LinacModulator.h \
		$(LINACMODULATOR_HOME)/LinacModulatorClass.h

$(OBJDIR)/LinacModulator.o:  $(LINACMODULATOR_HOME)/LinacModulator.cpp $(LINACMODULATOR_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacModulator.o
$(OBJDIR)/LinacModulatorClass.o:  $(LINACMODULATOR_HOME)/LinacModulatorClass.cpp $(LINACMODULATOR_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacModulatorClass.o
$(OBJDIR)/LinacModulatorStateMachine.o:  $(LINACMODULATOR_HOME)/LinacModulatorStateMachine.cpp $(LINACMODULATOR_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacModulatorStateMachine.o

#------------  Object files dependancies for LinacModAux class  ------------
LINACMODAUX_INCLUDES = \
		$(LINACMODAUX_HOME)/LinacModAux.h \
		$(LINACMODAUX_HOME)/LinacModAuxClass.h

$(OBJDIR)/LinacModAux.o:  $(LINACMODAUX_HOME)/LinacModAux.cpp $(LINACMODAUX_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacModAux.o
$(OBJDIR)/LinacModAuxClass.o:  $(LINACMODAUX_HOME)/LinacModAuxClass.cpp $(LINACMODAUX_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacModAuxClass.o
$(OBJDIR)/LinacModAuxStateMachine.o:  $(LINACMODAUX_HOME)/LinacModAuxStateMachine.cpp $(LINACMODAUX_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacModAuxStateMachine.o

#------------  Object files dependancies for LinacHVPS class  ------------
LINACHVPS_INCLUDES = \
		$(LINACHVPS_HOME)/LinacHVPS.h \
		$(LINACHVPS_HOME)/LinacHVPSClass.h

$(OBJDIR)/LinacHVPS.o:  $(LINACHVPS_HOME)/LinacHVPS.cpp $(LINACHVPS_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacHVPS.o
$(OBJDIR)/LinacHVPSClass.o:  $(LINACHVPS_HOME)/LinacHVPSClass.cpp $(LINACHVPS_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacHVPSClass.o
$(OBJDIR)/LinacHVPSStateMachine.o:  $(LINACHVPS_HOME)/LinacHVPSStateMachine.cpp $(LINACHVPS_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacHVPSStateMachine.o

#------------  Object files dependancies for LinacGunAux class  ------------
LINACGUNAUX_INCLUDES = \
		$(LINACGUNAUX_HOME)/LinacGunAux.h \
		$(LINACGUNAUX_HOME)/LinacGunAuxClass.h

$(OBJDIR)/LinacGunAux.o:  $(LINACGUNAUX_HOME)/LinacGunAux.cpp $(LINACGUNAUX_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacGunAux.o
$(OBJDIR)/LinacGunAuxClass.o:  $(LINACGUNAUX_HOME)/LinacGunAuxClass.cpp $(LINACGUNAUX_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacGunAuxClass.o
$(OBJDIR)/LinacGunAuxStateMachine.o:  $(LINACGUNAUX_HOME)/LinacGunAuxStateMachine.cpp $(LINACGUNAUX_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacGunAuxStateMachine.o

#------------  Object files dependancies for LinacGun class  ------------
LINACGUN_INCLUDES = \
		$(LINACGUN_HOME)/LinacGun.h \
		$(LINACGUN_HOME)/LinacGunClass.h

$(OBJDIR)/LinacGun.o:  $(LINACGUN_HOME)/LinacGun.cpp $(LINACGUN_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacGun.o
$(OBJDIR)/LinacGunClass.o:  $(LINACGUN_HOME)/LinacGunClass.cpp $(LINACGUN_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacGunClass.o
$(OBJDIR)/LinacGunStateMachine.o:  $(LINACGUN_HOME)/LinacGunStateMachine.cpp $(LINACGUN_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacGunStateMachine.o

#------------  Object files dependancies for LinacCooling class  ------------
LINACCOOLING_INCLUDES = \
		$(LINACCOOLING_HOME)/LinacCooling.h \
		$(LINACCOOLING_HOME)/LinacCoolingClass.h

$(OBJDIR)/LinacCooling.o:  $(LINACCOOLING_HOME)/LinacCooling.cpp $(LINACCOOLING_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacCooling.o
$(OBJDIR)/LinacCoolingClass.o:  $(LINACCOOLING_HOME)/LinacCoolingClass.cpp $(LINACCOOLING_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacCoolingClass.o
$(OBJDIR)/LinacCoolingStateMachine.o:  $(LINACCOOLING_HOME)/LinacCoolingStateMachine.cpp $(LINACCOOLING_INCLUDES)
	$(CC) $(CXXFLAGS) -c $< -o $(OBJDIR)/LinacCoolingStateMachine.o



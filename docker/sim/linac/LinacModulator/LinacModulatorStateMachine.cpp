/*----- PROTECTED REGION ID(LinacModulatorStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        LinacModulatorStateMachine.cpp
//
// description : State machine file for the LinacModulator class
//
// project :     LinacModulator
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <LinacModulator.h>

/*----- PROTECTED REGION END -----*/	//	LinacModulator::LinacModulatorStateMachine.cpp

//================================================================
//  States   |  Description
//================================================================
//  ON       |  *
//  OFF      |  *
//  DISABLE  |  *
//  FAULT    |  


namespace LinacModulator_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_VPFN_allowed()
 *	Description : Execution allowed for VPFN attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_VPFN_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for VPFN attribute in Write access.
	/*----- PROTECTED REGION ID(LinacModulator::VPFNStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::VPFNStateAllowed_WRITE

	//	Not any excluded states for VPFN attribute in read access.
	/*----- PROTECTED REGION ID(LinacModulator::VPFNStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::VPFNStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_Delay_allowed()
 *	Description : Execution allowed for Delay attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_Delay_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Delay attribute in Write access.
	/*----- PROTECTED REGION ID(LinacModulator::DelayStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::DelayStateAllowed_WRITE

	//	Not any excluded states for Delay attribute in read access.
	/*----- PROTECTED REGION ID(LinacModulator::DelayStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::DelayStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_DelayS_allowed()
 *	Description : Execution allowed for DelayS attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_DelayS_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for DelayS attribute in Write access.
	/*----- PROTECTED REGION ID(LinacModulator::DelaySStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::DelaySStateAllowed_WRITE

	//	Not any excluded states for DelayS attribute in read access.
	/*----- PROTECTED REGION ID(LinacModulator::DelaySStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::DelaySStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_KlystronPeakI_allowed()
 *	Description : Execution allowed for KlystronPeakI attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_KlystronPeakI_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for KlystronPeakI attribute in read access.
	/*----- PROTECTED REGION ID(LinacModulator::KlystronPeakIStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::KlystronPeakIStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_KlystronPeakV_allowed()
 *	Description : Execution allowed for KlystronPeakV attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_KlystronPeakV_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for KlystronPeakV attribute in read access.
	/*----- PROTECTED REGION ID(LinacModulator::KlystronPeakVStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::KlystronPeakVStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_PeakPowerIn_allowed()
 *	Description : Execution allowed for PeakPowerIn attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_PeakPowerIn_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for PeakPowerIn attribute in read access.
	/*----- PROTECTED REGION ID(LinacModulator::PeakPowerInStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::PeakPowerInStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_PeakPowerOut_allowed()
 *	Description : Execution allowed for PeakPowerOut attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_PeakPowerOut_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for PeakPowerOut attribute in read access.
	/*----- PROTECTED REGION ID(LinacModulator::PeakPowerOutStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::PeakPowerOutStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_On_allowed()
 *	Description : Execution allowed for On attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_On_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for On command.
	/*----- PROTECTED REGION ID(LinacModulator::OnStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::OnStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_Off_allowed()
 *	Description : Execution allowed for Off attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_Off_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Off command.
	/*----- PROTECTED REGION ID(LinacModulator::OffStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::OffStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_Reset_allowed()
 *	Description : Execution allowed for Reset attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_Reset_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Reset command.
	/*----- PROTECTED REGION ID(LinacModulator::ResetStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::ResetStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_TimingOn_allowed()
 *	Description : Execution allowed for TimingOn attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_TimingOn_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for TimingOn command.
	/*----- PROTECTED REGION ID(LinacModulator::TimingOnStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::TimingOnStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_SoftOn_allowed()
 *	Description : Execution allowed for SoftOn attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_SoftOn_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for SoftOn command.
	/*----- PROTECTED REGION ID(LinacModulator::SoftOnStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::SoftOnStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacModulator::is_SoftOff_allowed()
 *	Description : Execution allowed for SoftOff attribute
 */
//--------------------------------------------------------
bool LinacModulator::is_SoftOff_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for SoftOff command.
	/*----- PROTECTED REGION ID(LinacModulator::SoftOffStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacModulator::SoftOffStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(LinacModulator::LinacModulatorStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	LinacModulator::LinacModulatorStateAllowed.AdditionalMethods

}	//	End of namespace

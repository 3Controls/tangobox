/*----- PROTECTED REGION ID(LinacGunAuxStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        LinacGunAuxStateMachine.cpp
//
// description : State machine file for the LinacGunAux class
//
// project :     Linac Gun Auxiliary
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <LinacGunAux.h>

/*----- PROTECTED REGION END -----*/	//	LinacGunAux::LinacGunAuxStateMachine.cpp

//================================================================
//  States   |  Description
//================================================================
//  FAULT    |  *
//  MOVING   |  *
//  OFF      |  *
//  ON       |  *
//  DISABLE  |  The device can't be switch ON.


namespace LinacGunAux_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LinacGunAux::is_HeatI_allowed()
 *	Description : Execution allowed for HeatI attribute
 */
//--------------------------------------------------------
bool LinacGunAux::is_HeatI_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for HeatI attribute in read access.
	/*----- PROTECTED REGION ID(LinacGunAux::HeatIStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGunAux::HeatIStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGunAux::is_HeatV_allowed()
 *	Description : Execution allowed for HeatV attribute
 */
//--------------------------------------------------------
bool LinacGunAux::is_HeatV_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for HeatV attribute in Write access.
	/*----- PROTECTED REGION ID(LinacGunAux::HeatVStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGunAux::HeatVStateAllowed_WRITE

	//	Not any excluded states for HeatV attribute in read access.
	/*----- PROTECTED REGION ID(LinacGunAux::HeatVStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGunAux::HeatVStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGunAux::is_Temporization_allowed()
 *	Description : Execution allowed for Temporization attribute
 */
//--------------------------------------------------------
bool LinacGunAux::is_Temporization_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Temporization attribute in read access.
	/*----- PROTECTED REGION ID(LinacGunAux::TemporizationStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGunAux::TemporizationStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : LinacGunAux::is_On_allowed()
 *	Description : Execution allowed for On attribute
 */
//--------------------------------------------------------
bool LinacGunAux::is_On_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for On command.
	/*----- PROTECTED REGION ID(LinacGunAux::OnStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGunAux::OnStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGunAux::is_Off_allowed()
 *	Description : Execution allowed for Off attribute
 */
//--------------------------------------------------------
bool LinacGunAux::is_Off_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Off command.
	/*----- PROTECTED REGION ID(LinacGunAux::OffStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGunAux::OffStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : LinacGunAux::is_Reset_allowed()
 *	Description : Execution allowed for Reset attribute
 */
//--------------------------------------------------------
bool LinacGunAux::is_Reset_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Reset command.
	/*----- PROTECTED REGION ID(LinacGunAux::ResetStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	LinacGunAux::ResetStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(LinacGunAux::LinacGunAuxStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	LinacGunAux::LinacGunAuxStateAllowed.AdditionalMethods

}	//	End of namespace

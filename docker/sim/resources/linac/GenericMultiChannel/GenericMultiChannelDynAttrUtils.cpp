/*----- PROTECTED REGION ID(GenericMultiChannel::DynAttrUtils.cpp) ENABLED START -----*/
static const char *RcsId = "$Id: GenericMultiChannelDynAttrUtils.cpp,v 1.2 2013-08-08 11:58:04 tappret Exp $";
//=============================================================================
//
// file :        GenericMultiChannelDynAttrUtils.cpp
//
// description : Dynamic attributes utilities file for the GenericMultiChannel class
//
// project :     TangoMultiChannel
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author: tappret $
//
// $Revision: 1.2 $
// $Date: 2013-08-08 11:58:04 $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#include <GenericMultiChannel.h>
#include <GenericMultiChannelClass.h>

/*----- PROTECTED REGION END -----*/	//	GenericMultiChannel::DynAttrUtils.cpp

//================================================================
//  Attributes managed is:
//================================================================
//  DoubleSpectrum  |  Tango::DevDouble	Spectrum  ( max = 512)
//================================================================

//	For compatibility reason, this file (GenericMultiChannelDynAttrUtils)
//	manage also the dynamic command utilities.
//================================================================
//  The following table gives the correspondence
//  between command and method names.
//
//  Command name  |  Method name
//================================================================
//================================================================

namespace GenericMultiChannel_ns
{
//=============================================================
//	Add/Remove dynamic attribute methods
//=============================================================

//--------------------------------------------------------
/**
 *	Add a DoubleSpectrum dynamic attribute.
 *
 *  parameter attname: attribute name to be cretated and added.
 *  parameter ptr:     memory buffer used to set attribute value.
 *                     If NULL or not specified, buffer will be allocated.
 */
//--------------------------------------------------------
void GenericMultiChannel::add_DoubleSpectrum_dynamic_attribute(string attname, Tango::DevDouble *ptr)
{
	//	Attribute : DoubleSpectrum
	if (ptr==NULL)
		ptr = new Tango::DevDouble[512];
	DoubleSpectrumAttrib	*doublespectrum = new DoubleSpectrumAttrib(attname);
	Tango::UserDefaultAttrProp	doublespectrum_prop;
	doublespectrum_prop.set_description("This attribute will contains values of collected attributes.");
	//	label	not set for DoubleSpectrum
	//	unit	not set for DoubleSpectrum
	//	standard_unit	not set for DoubleSpectrum
	//	display_unit	not set for DoubleSpectrum
	//	format	not set for DoubleSpectrum
	//	max_value	not set for DoubleSpectrum
	//	min_value	not set for DoubleSpectrum
	//	max_alarm	not set for DoubleSpectrum
	//	min_alarm	not set for DoubleSpectrum
	//	max_warning	not set for DoubleSpectrum
	//	min_warning	not set for DoubleSpectrum
	//	delta_t	not set for DoubleSpectrum
	//	delta_val	not set for DoubleSpectrum
	
	/*----- PROTECTED REGION ID(GenericMultiChannel::att_DoubleSpectrum_dynamic_attribute) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	GenericMultiChannel::att_DoubleSpectrum_dynamic_attribute
	doublespectrum->set_default_properties(doublespectrum_prop);
	//	Not Polled
	doublespectrum->set_disp_level(Tango::OPERATOR);
	//	Not Memorized
	DoubleSpectrum_data.insert(make_pair(attname, ptr));
	add_attribute(doublespectrum);
}
//--------------------------------------------------------
/**
 *	remove a DoubleSpectrum dynamic attribute.
 *
 *  parameter attname: attribute name to be removed.
 *  parameter free_it: memory buffer will be freed if true or not specified.
 */
//--------------------------------------------------------
void GenericMultiChannel::remove_DoubleSpectrum_dynamic_attribute(string attname, bool free_it)
{
	remove_attribute(attname, true);
	map<string,Tango::DevDouble *>::iterator ite;
    if ((ite=DoubleSpectrum_data.find(attname))!=DoubleSpectrum_data.end())
    {
    	/*----- PROTECTED REGION ID(GenericMultiChannel::remove_DoubleSpectrum_dynamic_attribute) ENABLED START -----*/
    	
    	/*----- PROTECTED REGION END -----*/	//	GenericMultiChannel::remove_DoubleSpectrum_dynamic_attribute
		if (free_it)
			delete[] ite->second;
		DoubleSpectrum_data.erase(ite);
	}
}


//============================================================
//	Tool methods to get pointer on attribute data buffer 
//============================================================
//--------------------------------------------------------
/**
 *	Return a pointer on DoubleSpectrum data.
 *
 *  parameter attname: the specified attribute name.
 */
//--------------------------------------------------------
Tango::DevDouble *GenericMultiChannel::get_DoubleSpectrum_data_ptr(string &name)
{
	map<string,Tango::DevDouble *>::iterator ite;
    if ((ite=DoubleSpectrum_data.find(name))==DoubleSpectrum_data.end())
    {
		TangoSys_OMemStream	tms;
		tms << "Dynamic attribute " << name << " has not been created";
		Tango::Except::throw_exception(
					(const char *)"ATTRIBUTE_NOT_FOUND",
					tms.str().c_str(),
					(const char *)"GenericMultiChannel::get_DoubleSpectrum_data_ptr()");
    }
	return  ite->second;
}


//=============================================================
//	Add/Remove dynamic command methods
//=============================================================


} //	namespace
